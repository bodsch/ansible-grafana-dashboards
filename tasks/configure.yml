---

- name: check if there are any dashboards in {{ grafana_dashboards_local_tmp_directory }}
  delegate_to: localhost
  become: false
  find:
    paths: "{{ grafana_dashboards_local_tmp_directory }}"
    patterns: "*.json"
    file_type: file
    recurse: true
  run_once: true
  register: found_dashboards

- block:
    - name: reduce the found dashboards to the subdirectories and remove the basepath
      set_fact:
        sub_directories: "{{ found_dashboards | sub_directories(path_reduce=grafana_dashboards_local_tmp_directory,uniq=True) }}"

    - name: copy local dashboards to our remote system
      copy:
        src: "{{ grafana_dashboards_local_tmp_directory }}/{{ item }}"
        dest: "{{ grafana_data_dir }}/dashboards/"
        owner: grafana
        group: grafana
        # mode: 0644
      loop:
        "{{ sub_directories }}"
      notify:
        - provisioned dashboards changed

    # - name: synchronize dashboards on remote system {{ grafana_data_dir }}/dashboards/
    #   synchronize:
    #     src: "/tmp/grafana-dashboards"
    #     dest: "{{ grafana_data_dir }}/dashboards/"
    #     recursive: true
    #     archive: false
    #     delete: true
    #     owner: false
    #     group: false
    #     checksum: true
    #     rsync_path: su -c rsync
    #     rsync_opts:
    #       - "--exclude=.git"
    #       - --verbose
    #   delegate_to: "{{ inventory_hostname }}"
    #   notify: "provisioned dashboards changed"

    - name: create / update dashboards file (provisioning)
      become: true
      template:
        src: "provisioning.j2"
        dest: "/etc/grafana/provisioning/dashboards/{{ item }}.yml"
        owner: root
        group: grafana
        mode: 0644
      loop:
        "{{ sub_directories }}"
      notify:
        - restart grafana

  when: found_dashboards | default([]) | count > 0

#     # - name: Find files depending on REGEX pattern
#     #   find:
#     #     paths: "{{ item.spath }}"
#     #     file_type: "{{ item.type }}"
#     #     recurse: yes
#     #     patterns: "{{ item.pattern }}"
#     #     use_regex: yes
#     #   with_items:
#     #     - "{{ file_vars }}"
#     #   register: change_mode
#     #
#     # - name: fix permissions for dashboard directory  # noqa 301
#     #   command: "{{ item }}"
#     #   args:
#     #     warn: false
#     #   with_items:
#     #     - chown -R grafana:grafana {{ grafana_data_dir }}/dashboards
#     #     - find {{ grafana_data_dir }}/dashboards -maxdepth 5 -type d ! -perm 0750 -exec chmod 0750 {} \;
#     #     - find {{ grafana_data_dir }}/dashboards -maxdepth 5 -type f ! -perm 0640 -exec chmod 0640 {} \;
#
#   when: found_dashboards | length != 0

...
